[{"/Users/lulu/Desktop/Coursera/React/confusion/src/redux/dishes.js":"1","/Users/lulu/Desktop/Coursera/React/confusion/src/components/ContactComponent.js":"2","/Users/lulu/Desktop/Coursera/React/confusion/src/redux/configureStore.js":"3","/Users/lulu/Desktop/Coursera/React/confusion/src/App.js":"4","/Users/lulu/Desktop/Coursera/React/confusion/src/redux/leaders.js":"5","/Users/lulu/Desktop/Coursera/React/confusion/src/redux/comments.js":"6","/Users/lulu/Desktop/Coursera/React/confusion/src/redux/promotions.js":"7","/Users/lulu/Desktop/Coursera/React/confusion/src/redux/ActionTypes.js":"8","/Users/lulu/Desktop/Coursera/React/confusion/src/redux/ActionCreators.js":"9","/Users/lulu/Desktop/Coursera/React/confusion/src/redux/Forms.js":"10","/Users/lulu/Desktop/Coursera/React/confusion/src/components/AboutComponent.js":"11","/Users/lulu/Desktop/Coursera/React/confusion/src/components/HeaderComponent.js":"12","/Users/lulu/Desktop/Coursera/React/confusion/src/components/MainComponent.js":"13","/Users/lulu/Desktop/Coursera/React/confusion/src/reportWebVitals.js":"14","/Users/lulu/Desktop/Coursera/React/confusion/src/components/HomeComponent.js":"15","/Users/lulu/Desktop/Coursera/React/confusion/src/components/FooterComponent.js":"16","/Users/lulu/Desktop/Coursera/React/confusion/src/shared/baseUrl.js":"17","/Users/lulu/Desktop/Coursera/React/confusion/src/shared/Dishes.js":"18","/Users/lulu/Desktop/Coursera/React/confusion/src/index.js":"19","/Users/lulu/Desktop/Coursera/React/confusion/src/components/MenuComponent.js":"20","/Users/lulu/Desktop/Coursera/React/confusion/src/components/DishDetailComponent.js":"21","/Users/lulu/Desktop/Coursera/React/confusion/src/components/LoadingComponent.js":"22"},{"size":597,"mtime":1611380588889,"results":"23","hashOfConfig":"24"},{"size":13628,"mtime":1611654724320,"results":"25","hashOfConfig":"24"},{"size":837,"mtime":1611374068189,"results":"26","hashOfConfig":"24"},{"size":640,"mtime":1611202554083,"results":"27","hashOfConfig":"24"},{"size":606,"mtime":1611641830008,"results":"28","hashOfConfig":"24"},{"size":686,"mtime":1611406587795,"results":"29","hashOfConfig":"24"},{"size":600,"mtime":1611557968512,"results":"30","hashOfConfig":"24"},{"size":592,"mtime":1611653086185,"results":"31","hashOfConfig":"24"},{"size":6521,"mtime":1611654221610,"results":"32","hashOfConfig":"24"},{"size":161,"mtime":1611371945199,"results":"33","hashOfConfig":"24"},{"size":6353,"mtime":1611754766381,"results":"34","hashOfConfig":"24"},{"size":5332,"mtime":1610865431971,"results":"35","hashOfConfig":"24"},{"size":4598,"mtime":1611753957086,"results":"36","hashOfConfig":"24"},{"size":362,"mtime":1610259594554,"results":"37","hashOfConfig":"24"},{"size":2108,"mtime":1611641609582,"results":"38","hashOfConfig":"24"},{"size":2583,"mtime":1610513576744,"results":"39","hashOfConfig":"24"},{"size":50,"mtime":1611379861429,"results":"40","hashOfConfig":"24"},{"size":1448,"mtime":1610517164761,"results":"41","hashOfConfig":"24"},{"size":639,"mtime":1610508618220,"results":"42","hashOfConfig":"24"},{"size":2799,"mtime":1611380960406,"results":"43","hashOfConfig":"24"},{"size":8822,"mtime":1611652672300,"results":"44","hashOfConfig":"24"},{"size":247,"mtime":1611296529422,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cmip7r",{"filePath":"48","messages":"49","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lulu/Desktop/Coursera/React/confusion/src/redux/dishes.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/components/ContactComponent.js",["97","98","99","100","101","102","103","104","105","106","107","108"],"import React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, FormGroup, Label, Input, Col, Row, FormFeedback }from 'reactstrap'\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props){\n        super(props);\n\n        // this.state = {\n        //     firstname: '',\n        //     lastname: '',\n        //     telnum: '',\n        //     email: '',\n        //     agree: false,\n        //     contactType: 'Tel.',\n        //     message: '', \n        //     touched: {\n        //         firstname: false,\n        //         lastname: false,\n        //         telnum: false,\n        //         email: false \n        //     }\n        // }\n\n        // this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // handleInputChange(event){\n    //     const target = event.target;\n    //     const value= target.type === 'checkbox' ? target.checked : target.value;\n    //     const name = target.name;\n        \n    //     this.setState({\n    //         [name]: value\n    //     });\n    // }\n\n    handleSubmit(values){\n            // put it in actioncreator\n        // console.log('Thank you for your feedback! ' + JSON.stringify(values));\n        // alert('Thank you for your feedback!' + JSON.stringify(values));\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm()\n        // event.preventDefault();\n    }\n\n    // // change fields to be true\n    // handleBlur = (field) => (evt) => {\n    //     this.setState({\n    //         touched: { ...this.state.touched, [field]: true}\n    //     });\n    // }\n\n    // // validate fields\n    // validate(firstname, lastname, telnum, email) {\n    //     const errors = {\n    //         firstname: '',\n    //         lastname: '',\n    //         telnum: '',\n    //         email: ''\n    //     };\n\n    //     if(this.state.touched.firstname && firstname.length < 3){\n    //         errors.firstname = 'First Name should be >= 3 characters';\n    //     }else if (this.state.touched.firstname && firstname.length > 10){\n    //         errors.firstname = 'First Name should be <= 10 characters';\n    //     }\n\n    //     if(this.state.touched.lastname && lastname.length < 2){\n    //         errors.lastname = 'Last Name should be >= 2 characters';\n    //     }else if (this.state.touched.lastname && lastname.length > 10){\n    //         errors.lastname = 'Last Name should be <= 10 characters';\n    //     }\n\n    //     // regression expression to test whether should be all numbers or not\n    //     const reg = /^\\d+$/;\n    //     if (this.state.touched.telnum && !reg.test(telnum)){\n    //         errors.telnum = 'Tel. Number should only contain numbers';\n    //     }\n\n    //     if(this.state.touched.email && email.split('').filter(x=>x==='@').length !== 1)\n    //         errors.email = 'Email shoudl contain a @';\n        \n    //     return errors;\n    // }\n\n    render () {\n        // const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem> \n                                <Link to='/home'>Home</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Contact Us</h3>\n                            {/* a break */}\n                            <hr />\n                        </div>\n                    </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>\n                            Send us your feedback\n                        </h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators = {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators = {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators = {{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\" \n                                        validators = {{\n                                            required, validEmail\n                                        }}\n                                        />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                                <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                    Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;",["109","110"],"/Users/lulu/Desktop/Coursera/React/confusion/src/redux/configureStore.js",[],["111","112"],"/Users/lulu/Desktop/Coursera/React/confusion/src/App.js",[],["113","114"],"/Users/lulu/Desktop/Coursera/React/confusion/src/redux/leaders.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/redux/comments.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/redux/promotions.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/redux/ActionTypes.js",[],["115","116"],"/Users/lulu/Desktop/Coursera/React/confusion/src/redux/ActionCreators.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/redux/Forms.js",[],["117","118"],"/Users/lulu/Desktop/Coursera/React/confusion/src/components/AboutComponent.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/components/HeaderComponent.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/components/MainComponent.js",["119"],"/Users/lulu/Desktop/Coursera/React/confusion/src/reportWebVitals.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/components/HomeComponent.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/components/FooterComponent.js",[],["120","121"],"/Users/lulu/Desktop/Coursera/React/confusion/src/shared/baseUrl.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/shared/Dishes.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/index.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/components/MenuComponent.js",[],"/Users/lulu/Desktop/Coursera/React/confusion/src/components/DishDetailComponent.js",["122","123","124"],"/Users/lulu/Desktop/Coursera/React/confusion/src/components/LoadingComponent.js",[],{"ruleId":"125","severity":1,"message":"126","line":2,"column":46,"nodeType":"127","messageId":"128","endLine":2,"endColumn":55},{"ruleId":"125","severity":1,"message":"129","line":2,"column":64,"nodeType":"127","messageId":"128","endLine":2,"endColumn":69},{"ruleId":"125","severity":1,"message":"130","line":2,"column":81,"nodeType":"127","messageId":"128","endLine":2,"endColumn":93},{"ruleId":"125","severity":1,"message":"131","line":4,"column":33,"nodeType":"127","messageId":"128","endLine":4,"endColumn":40},{"ruleId":"132","severity":1,"message":"133","line":135,"column":29,"nodeType":"134","endLine":135,"endColumn":71},{"ruleId":"135","severity":1,"message":"136","line":151,"column":37,"nodeType":"134","endLine":157,"endColumn":44},{"ruleId":"135","severity":1,"message":"136","line":173,"column":37,"nodeType":"134","endLine":179,"endColumn":44},{"ruleId":"135","severity":1,"message":"136","line":195,"column":37,"nodeType":"134","endLine":201,"endColumn":44},{"ruleId":"135","severity":1,"message":"136","line":218,"column":37,"nodeType":"134","endLine":224,"endColumn":43},{"ruleId":"135","severity":1,"message":"137","line":240,"column":45,"nodeType":"134","endLine":242,"endColumn":52},{"ruleId":"135","severity":1,"message":"138","line":248,"column":37,"nodeType":"134","endLine":249,"endColumn":66},{"ruleId":"135","severity":1,"message":"139","line":258,"column":37,"nodeType":"134","endLine":260,"endColumn":68},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"140","replacedBy":"146"},{"ruleId":"142","replacedBy":"147"},{"ruleId":"140","replacedBy":"148"},{"ruleId":"142","replacedBy":"149"},{"ruleId":"140","replacedBy":"150"},{"ruleId":"142","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":37,"column":3,"nodeType":"154","messageId":"155","endLine":39,"endColumn":4},{"ruleId":"140","replacedBy":"156"},{"ruleId":"142","replacedBy":"157"},{"ruleId":"135","severity":1,"message":"138","line":50,"column":41,"nodeType":"134","endLine":51,"endColumn":71},{"ruleId":"135","severity":1,"message":"136","line":64,"column":41,"nodeType":"134","endLine":68,"endColumn":50},{"ruleId":"135","severity":1,"message":"139","line":84,"column":41,"nodeType":"134","endLine":86,"endColumn":72},"no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'FormFeedback' is defined but never used.","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["158"],"no-negated-in-lhs",["159"],["158"],["159"],["158"],["159"],["158"],["159"],["158"],["159"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["158"],["159"],"no-global-assign","no-unsafe-negation"]